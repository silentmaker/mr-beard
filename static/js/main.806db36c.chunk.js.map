{"version":3,"sources":["assets/images/sprite-beards.png","components/Recorder.js","components/Chooser.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","beardImage","Image","src","beardSprite","Recorder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","isInfo","isSupported","isCapture","screenshot","mediaStream","faceDetector","window","FaceDetector","video","refs","cameraVideo","canvas","cameraCanvas","width","innerWidth","height","innerHeight","ctx","getContext","setState","_this2","navigator","mediaDevices","getUserMedia","audio","facingMode","then","onloadedmetadata","play","requestAnimationFrame","detectFace","srcObject","catch","err","console","log","concat","name","message","_this3","detect","faces","beard","clearRect","forEach","face","boundingBox","landmarks","landmark","type","_landmark$locations$","locations","x","y","drawImage","clientWidth","clientHeight","toDataURL","getTracks","track","stop","_this4","setTimeout","_this5","_this$state","react_default","a","createElement","className","ref","autoPlay","onClick","closeCamera","openCamera","captureCamera","toggleInfo","href","download","alt","clearPhoto","Component","Chooser","isExpanded","beards","current","index","onChange","toggleExpand","map","key","style","backgroundPosition","selectBeard","App","src_components_Recorder","src_components_Chooser","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.806db36c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite-beards.bc1de142.png\";","import React, { Component } from 'react';\r\nimport './Recorder.css';\r\nimport beardSprite from '../assets/images/sprite-beards.png';\r\n\r\nconst beardImage = new Image();\r\nbeardImage.src = beardSprite;\r\n\r\nclass Recorder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isInfo: false,\r\n      isSupported: false,\r\n      isCapture: false,\r\n      screenshot: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mediaStream = null;\r\n    this.faceDetector = window.FaceDetector ? new window.FaceDetector() : null;\r\n    this.video = this.refs.cameraVideo;\r\n    this.canvas = this.refs.cameraCanvas;\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.setState({ isSupported: this.faceDetector });\r\n  }\r\n\r\n  openCamera() {\r\n    const constraints = { audio: false, video: { facingMode: 'user' } };\r\n    const camera = window.navigator.mediaDevices.getUserMedia(constraints);\r\n    camera.then((mediaStream) => {\r\n      const { video } = this;\r\n      video.onloadedmetadata = () => {\r\n        video.play();\r\n        requestAnimationFrame(() => this.detectFace());\r\n      };\r\n      video.srcObject = mediaStream;\r\n      this.setState({ isOpen: true });\r\n      this.mediaStream = mediaStream;\r\n    }).catch((err) => {\r\n      console.log(`${err.name}: ${err.message}`);\r\n    });\r\n  }\r\n\r\n  detectFace() {\r\n    if (!this.faceDetector) return;\r\n    this.faceDetector.detect(this.refs.cameraVideo).then((faces) => {\r\n      const { canvas, video, ctx } = this;\r\n      const { isCapture } = this.state;\r\n      const { beard } = this.props;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      faces.forEach(face => {\r\n        const { height } = face.boundingBox;\r\n        face.landmarks.forEach((landmark) => {\r\n          if (landmark.type === 'mouth') {\r\n            const { x, y } = landmark.locations[0];\r\n            if (isCapture) ctx.drawImage(video, 0, 0, video.clientWidth, video.clientHeight);\r\n            ctx.drawImage(beardImage, -beard.x * 2, -beard.y * 2, 150, 80, x - 75, y - height / 200 * 80, 150, 80);\r\n            if (isCapture) this.setState({ isCapture: false, screenshot: canvas.toDataURL('image/png') });\r\n          }\r\n        });\r\n      });\r\n      if (this.state.isOpen) requestAnimationFrame(() => this.detectFace());\r\n    }).catch((err) => {\r\n      console.log(`${err.name}: ${err.message}`);\r\n    });\r\n  }\r\n\r\n  closeCamera() {\r\n    if (this.mediaStream) {\r\n      this.mediaStream.getTracks().forEach(track => track.stop());\r\n      this.setState({ isOpen: false });\r\n    }\r\n  }\r\n\r\n  captureCamera() {\r\n    this.setState({ isCapture: !this.state.isCapture });    \r\n  }\r\n\r\n  toggleInfo() {\r\n    this.setState({ isInfo: !this.state.isInfo });\r\n  }\r\n\r\n  clearPhoto() {\r\n    setTimeout(() => {\r\n      this.setState({ screenshot: '' });\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    const { isOpen, isInfo, isSupported, screenshot } = this.state;\r\n    return (\r\n      <div className=\"recorder-container\">\r\n        <video className={`camera-video ${isOpen ? 'active' : ''}`} ref=\"cameraVideo\" autoPlay></video>\r\n        <canvas className={`camera-canvas ${isOpen ? 'active' : ''}`} ref=\"cameraCanvas\"></canvas>\r\n        {isOpen ?\r\n          <div className=\"icon-close\" onClick={() => this.closeCamera()}></div> :\r\n          <div className=\"icon-open\" onClick={() => this.openCamera()}></div>\r\n        }\r\n        {!isOpen ? '' :\r\n          <div className=\"icon-capture\" onClick={() => this.captureCamera()}></div>\r\n        }\r\n        {isSupported ? '' :\r\n          <div className={`feature-info ${isInfo ? 'active' : ''}`} onClick={() => this.toggleInfo()}>\r\n            <div>Enable FaceDetector</div>\r\n            <div>Please Copy and Visit The URL Below:</div>\r\n            <div><code>chrome://flags/#enable-experimental-web-platform-features</code></div>\r\n          </div>\r\n        }\r\n        <a className={`save-btn ${screenshot ? 'active' : ''}`} href={screenshot} download=\"mr-beard.png\">\r\n          <img src={screenshot} alt=\"mr-beard.png\" onClick={() => this.clearPhoto()}/>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recorder;\r\n","import React, { Component } from 'react';\r\nimport './Chooser.css';\r\n\r\nclass Chooser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false,\r\n      beards: [\r\n        { x: 0, y: 2 },\r\n        { x: -74, y: 2 },\r\n        { x: 0, y: -33 },\r\n        { x: -74, y: -33 },\r\n        { x: 0, y: -67 },\r\n        { x: -74, y: -67 },\r\n        { x: 0, y: -101 },\r\n        { x: -74, y: -104 },\r\n        { x: 0, y: -138 },\r\n        { x: -74, y: -138 },\r\n        { x: -2, y: -173 },\r\n      ],\r\n      current: 0,\r\n    };\r\n  }\r\n\r\n  toggleExpand() {\r\n    this.setState({ isExpanded: !this.state.isExpanded });\r\n  }\r\n\r\n  selectBeard(index) {\r\n    this.setState({ current: index });\r\n    this.props.onChange(this.state.beards[index]);\r\n  }\r\n\r\n  render() {\r\n    const { isExpanded, beards, current } = this.state;\r\n    return (\r\n      <div className={`chooser-container ${isExpanded ? 'expanded' : ''}`}>\r\n        <div className=\"chooser-title\"\r\n          onClick={() => this.toggleExpand()}>{isExpanded ? 'Hide Options' : 'Choose A Beard'}</div>\r\n        <ul className=\"deco-list\">\r\n          {beards.map((beard, index) =>\r\n            <li key={index}\r\n              className={`deco-item ${current === index ? 'current' : ''}`}\r\n              style={{backgroundPosition: `${beard.x}px ${beard.y}px`}}\r\n              onClick={() => this.selectBeard(index)}></li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chooser;\r\n","import React, { Component } from 'react';\nimport Recorder from './Recorder';\nimport Chooser from './Chooser';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      beard: { x: 0, y: 0 },\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Recorder beard={this.state.beard} />\n        <Chooser onChange={(beard) => this.setState({ beard })} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/styles/common.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}