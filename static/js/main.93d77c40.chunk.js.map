{"version":3,"sources":["assets/images/hats/hat-3.png","assets/images/hats/hat-1.png","assets/images/hats/hat-2.png","components/Recorder.js","components/Chooser.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","hatImage","Image","src","hatOne","Recorder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","isInfo","isSupported","mediaStream","faceDetector","window","FaceDetector","video","refs","cameraVideo","canvas","cameraCanvas","width","innerWidth","height","innerHeight","ctx","getContext","setState","_this2","_window","constraints","audio","facingMode","navigator","mediaDevices","getUserMedia","then","onloadedmetadata","play","requestAnimationFrame","detectFace","srcObject","catch","err","console","log","concat","name","message","_this3","detect","faces","clearRect","forEach","face","_face$boundingBox","boundingBox","top","left","size","drawImage","getTracks","track","stop","_this4","_this$state","react_default","a","createElement","className","ref","autoPlay","onClick","closeCamera","openCamera","toggleInfo","Component","Chooser","isExpanded","hatImages","hatTwo","hatThree","toggleExpand","map","image","key","alt","App","src_components_Recorder","src_components_Chooser","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.93d77c40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hat-3.6bcf11cf.png\";","module.exports = __webpack_public_path__ + \"static/media/hat-1.a5c3d008.png\";","module.exports = __webpack_public_path__ + \"static/media/hat-2.1ffeba0e.png\";","import React, { Component } from 'react';\r\nimport './Recorder.css';\r\nimport hatOne from '../assets/images/hats/hat-3.png';\r\n\r\nconst hatImage = new Image();\r\nhatImage.src = hatOne;\r\n\r\nclass Recorder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isInfo: false,\r\n      isSupported: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mediaStream = null;\r\n    this.faceDetector = window.FaceDetector ? new window.FaceDetector() : null;\r\n    this.video = this.refs.cameraVideo;\r\n    this.canvas = this.refs.cameraCanvas;\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.setState({ isSupported: this.faceDetector });\r\n  }\r\n\r\n  openCamera() {\r\n    const { innerWidth, innerHeight } = window;\r\n    const constraints = {\r\n      audio: false,\r\n      video: {\r\n        facingMode: 'user',\r\n        width: innerWidth,\r\n        height: innerHeight,\r\n      },\r\n    };\r\n    const camera = window.navigator.mediaDevices.getUserMedia(constraints);\r\n    camera.then((mediaStream) => {\r\n      const { video } = this;\r\n      video.onloadedmetadata = () => {\r\n        video.play();\r\n        requestAnimationFrame(() => this.detectFace());\r\n      };\r\n      video.srcObject = mediaStream;\r\n      this.setState({ isOpen: true });\r\n      this.mediaStream = mediaStream;\r\n    }).catch((err) => {\r\n      console.log(`${err.name}: ${err.message}`);\r\n    });\r\n  }\r\n\r\n  detectFace() {\r\n    if (!this.faceDetector) return;\r\n    this.faceDetector.detect(this.refs.cameraVideo).then((faces) => {\r\n      const { canvas, ctx } = this;\r\n      console.log(this.ctx);\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      faces.forEach(face => {\r\n        const { width, height, top, left } = face.boundingBox;\r\n        const size = width * 0.4;\r\n        // ctx.strokeRect(left, top, width, height);\r\n        ctx.drawImage(hatImage, left + width / 2 - size / 2, top - size - height / 4, size, size);\r\n      });\r\n      if (this.state.isOpen) requestAnimationFrame(() => this.detectFace());\r\n    }).catch((err) => {\r\n      console.log(`${err.name}: ${err.message}`);\r\n    });\r\n  }\r\n\r\n  closeCamera() {\r\n    if (this.mediaStream) {\r\n      this.mediaStream.getTracks().forEach(track => track.stop());\r\n      this.setState({ isOpen: false });\r\n    }\r\n  }\r\n\r\n  toggleInfo() {\r\n    this.setState({ isInfo: !this.state.isInfo });\r\n  }\r\n\r\n  render() {\r\n    const { isOpen, isInfo, isSupported } = this.state;\r\n    return (\r\n      <div className=\"recorder-container\">\r\n        <video className={`camera-video ${isOpen ? 'active' : ''}`} ref=\"cameraVideo\" autoPlay></video>\r\n        <canvas className={`camera-canvas ${isOpen ? 'active' : ''}`} ref=\"cameraCanvas\"></canvas>\r\n        {isOpen ?\r\n          <div className=\"icon-close\" onClick={() => this.closeCamera()}></div> :\r\n          <div className=\"icon-open\" onClick={() => this.openCamera()}></div>\r\n        }\r\n        {isSupported ? '' :\r\n          <div className={`feature-info ${isInfo ? 'active' : ''}`} onClick={() => this.toggleInfo()}>\r\n            <div>Enable FaceDetector</div>\r\n            <div>Please Copy and Visit The URL Below:</div>\r\n            <div><code>chrome://flags/#enable-experimental-web-platform-features</code></div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recorder;\r\n","import React, { Component } from 'react';\r\nimport './Chooser.css';\r\nimport hatOne from '../assets/images/hats/hat-1.png';\r\nimport hatTwo from '../assets/images/hats/hat-2.png';\r\nimport hatThree from '../assets/images/hats/hat-3.png';\r\n\r\nclass Chooser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isExpanded: false,\r\n      hatImages: [hatOne, hatTwo, hatThree],\r\n    };\r\n  }\r\n\r\n  toggleExpand() {\r\n    this.setState({ isExpanded: !this.state.isExpanded });\r\n  }\r\n\r\n  render() {\r\n    const { isExpanded, hatImages } = this.state;\r\n    return (\r\n      <div className={`chooser-container ${isExpanded ? 'expanded' : ''}`}>\r\n        <div className=\"chooser-title\"\r\n          onClick={() => this.toggleExpand()}>{isExpanded ? 'Hide Options' : 'Choose A Hat'}</div>\r\n        <ul className=\"hat-list\">\r\n          {hatImages.map(image =>\r\n            <li className=\"hat-item\" key={image}>\r\n              <img src={image} alt=\"\" />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chooser;\r\n","import React, { Component } from 'react';\nimport Recorder from './Recorder';\nimport Chooser from './Chooser';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Recorder />\n        <Chooser />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/styles/common.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}